imports:
    - { resource: packs_configuration.yaml }

parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    _instanceof:
        App\Formatter\TermFormatterInterface:
            tags: ['app.term_formatter']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Formatter\TermDataFormatter:
        arguments:
            - !tagged_iterator 'app.term_formatter'

    App\Security\DiscordGuildAccess:
        arguments:
            $guildId: '%env(DISCORD_GUILD_ID)%'

    Gedmo\Loggable\LoggableListener:
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [setAnnotationReader, ["@annotation_reader"]]

    Gedmo\Blameable\BlameableListener:
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [setAnnotationReader, ["@annotation_reader"]]

    App\Exporter\PackExporter:
        arguments:
            $configuration: '%pack_export_configuration%'
